generator client {
  provider = "prisma-client-js" //產生 Prisma Client，在程式中也可存取資料庫
  binaryTargets = ["native", "debian-openssl-3.0.x"] //指定建構 Prisma Client 時，支援在本機可用的版本，也產出可以在部署時也能運行的版本
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//文章主題：美食、住宿、景點、其他
enum Topic {
  FOOD
  STAY
  SPOT
  OTHERS
}

//使用者模型
model User {
  id        Int       @id @default(autoincrement()) //設定 @id 表示為主鍵（Primary Key）：方便查詢
  name      String    @unique
  posts     Post[] // 發表的文章
  comments  Comment[] // 發表的留言
  createdAt DateTime  @default(now())
}

//文章模型
model Post {
  id        Int       @id @default(autoincrement())
  title     String
  content   String    @db.Text //填入適合存在資料庫的 TEXT 類型(長內容)，而非預設的 VARCHAR(191)
  topic     Topic     @default(OTHERS)
  author    User      @relation(fields: [authorId], references: [id]) //定義外鍵關聯，使用該模型內的 authorId，參照 User 模型的 id 欄位
  authorId  Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  comments  Comment[] //與評論的一對多關聯

  @@index([topic]) //在資料庫中幫 topic 建立一個索引表，文章的 ID 會被存進去，加快查詢速度
  @@index([authorId])
}

//評論模型
model Comment {
  id          Int      @id @default(autoincrement())
  content     String   @db.Text
  commenter   User     @relation(fields: [commenterId], references: [id]) //關聯使用者
  commenterId Int
  createdAt   DateTime @default(now())
  post        Post     @relation(fields: [postId], references: [id], onDelete: Cascade) //當關聯的文章被刪除時，此筆評論也會被跟著刪除
  postId      Int

  @@index([postId])
  @@index([commenterId])
}
